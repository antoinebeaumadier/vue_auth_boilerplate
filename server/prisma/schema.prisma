// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  /// @encrypted - This field stores a hashed password using bcrypt
  password        String
  name            String?
  isVerified      Boolean  @default(false)
  verificationToken String?
  refreshTokens   RefreshToken[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("users")
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@map("refresh_tokens")
}

model Payment {
  id              String   @id @default(cuid())
  stripePaymentId String   @unique
  amount          Int
  currency        String
  status          String
  metadata        Json?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Refund {
  id            String   @id @default(cuid())
  stripeRefundId String  @unique
  paymentId     String
  amount        Int
  currency      String
  reason        String?
  createdAt     DateTime @default(now())
}

model Subscription {
  id                  String   @id @default(cuid())
  stripeSubscriptionId String  @unique
  customerId          String
  status              String
  currentPeriodEnd    DateTime
  metadata            Json?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model WebhookEvent {
  id            String   @id @default(cuid())
  stripeEventId String   @unique
  createdAt     DateTime @default(now())
}